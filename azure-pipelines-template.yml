variables:
  major: 1
  minor: 0

trigger:
  branches:
    include:
      - main
      - Release-*
      - V-*
      - Feature-*
      - MVP
      - DevOps

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build_Feature_Version_Number
    displayName: "Build Feature Version Number"
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/V-1.0')
    jobs:
      - job: Build_Feature_Version_Number
        variables:
          patch: $[counter(variables['minor'], 0)]
        steps:
          - bash: |
              echo "##vso[build.updatebuildnumber]GT-$(Build.SourceBranchName)-$(Build.BuildID)"
            name: SetFeatureBuildName

  - stage: Build_Release_Version_Number
    displayName: "Build Release Version Number"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/v-1.0')
    jobs:
      - job: Build_Release_Version_Number
        variables:
          patch: $[counter(variables['minor'], 0)]
        steps:
          - bash: |
              echo "##vso[build.updatebuildnumber]$(major).$(minor).$(patch)"
            name: SetMasterBuildName

  - stage: CI
    displayName: Build and Test Project
    condition: always()
    jobs:
      - job: build
        displayName: 'Build and Test'
        steps:
          ### ✅ Set up Python for Backend
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9'
              addToPath: true
            displayName: 'Use Python 3.9'

          - script: |
              python -m venv venv
              source venv/bin/activate
              pip install --upgrade pip
              pip install -r src/app/backend/requirements.txt
            displayName: 'Install Python Dependencies'

          ### ✅ Set up Node.js for Frontend
          - task: UseNode@1
            inputs:
              version: '16.x'
            displayName: 'Use Node.js 16'

          - script: |
              cd src/app/frontend
              npm install
            displayName: 'Install Frontend Dependencies'

          - script: |
              cd src/app/frontend
              npm run build
            displayName: 'Build Frontend'


          # ### ✅ Publish Artifacts for Deployment
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'src/app/frontend/build'
              artifactName: 'frontend-artifacts'
            displayName: 'Publish Frontend Build Artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'src/app/backend'
              artifactName: 'backend-artifacts'
            displayName: 'Publish Backend Build Artifacts'
